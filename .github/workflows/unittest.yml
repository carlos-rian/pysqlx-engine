name: Unit Tests

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'
    paths:
      - 'sqlx_engine/*'
      - 'tests/*'
      - 'requirements*'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/unittest.yml'

jobs:
  test:
    name: Run Unit Test
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v02


      - name: Up Database
        run: docker-compose up --build --detach

      - name: Check Containers
        run: |
          docker ps -a && \
          sleep 20

      - uses: snok/install-poetry@v1
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install Dependencies
        run: poetry install --no-interaction
        if: steps.cache-deps.outputs.cache-hit != 'true'
        
      - name: Test
        run: poetry run pytest --cov=sqlx_engine --ignore=tests --cov-report=term-missing:skip-covered --cov-report=xml tests ${@}
        
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.os }}_${{ matrix.python-version }}
